---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 12/23/2020 8:27 PM
---

local CustomAttackHelper = require("__enemyracemanager__/lib/helper/custom_attack_helper")
local ERMConfig = require("__enemyracemanager__/lib/global_config")

local CustomAttacks = CustomAttackHelper

function CustomAttacks.process_probe(event)
    CustomAttackHelper.drop_unit(event, MOD_NAME, CustomAttackHelper.get_unit(MOD_NAME, "construction_buildings"))
    event.source_entity.destroy()
end

function CustomAttacks.process_shuttle(event)
    local race_settings = CustomAttackHelper.get_race_settings(MOD_NAME)
    CustomAttackHelper.drop_unit(event, MOD_NAME, "zealot", 2)
    if CustomAttackHelper.can_spawn(75) then
        CustomAttackHelper.drop_unit(event, MOD_NAME, CustomAttackHelper.get_unit(MOD_NAME, "droppable_units"))
    end
    if race_settings.tier == 3 and CustomAttackHelper.can_spawn(30) then
        CustomAttackHelper.drop_unit(event, MOD_NAME, "dragoon", 2)

        if CustomAttackHelper.can_spawn(20) then
            CustomAttackHelper.drop_unit(event, MOD_NAME, CustomAttackHelper.get_unit(MOD_NAME, "droppable_units"), 1)
        end
    end
end

function CustomAttacks.process_carrier(event)
    CustomAttackHelper.drop_unit(event, MOD_NAME, "interceptor", 4)
    if CustomAttackHelper.can_spawn(20) then
        CustomAttackHelper.drop_unit(event, MOD_NAME, "interceptor", 2)
    end
    if CustomAttackHelper.can_spawn(10) then
        CustomAttackHelper.drop_unit(event, MOD_NAME, "interceptor", 2)
    end
end

function CustomAttacks.process_reaver(event)
    CustomAttackHelper.drop_unit(event, MOD_NAME, "scarab", 1)
end

function CustomAttacks.process_boss_units(event, batch_size)
    batch_size = batch_size or 8
    CustomAttackHelper.drop_boss_units(event, MOD_NAME, ERMConfig.boss_spawn_size * batch_size)
end

function CustomAttacks.process_batch_units(event, batch_size)
    batch_size = batch_size or 6
    CustomAttackHelper.drop_batch_units(event, MOD_NAME, ERMConfig.boss_spawn_size * batch_size)
end

---
--- Handles aftermath of lightning unit attack
--- Either attack 0,0 or build a base
---
function CustomAttacks.lightning_units_attack()
    local i = 0
    local unit_group = {}
    for surface_name, units in pairs(storage.lightning_units) do
        for key, unit_data in pairs(units) do
            local unit = unit_data.entity

            if unit.valid then
                local commandable = unit.commandable
                if (commandable.has_command == false or 
                    commandable.command.type == defines.command.wander or
                 (commandable.command.type == defines.command.compound and commandable.command.commands[1].type == defines.command.wander)
                ) then
                    table.insert(unit_group, unit)
                    storage.lightning_units[surface_name][key] = nil
                    storage.backlog_lightning_units[key] = {
                        entity = unit,
                        tick = game.tick
                    }
                end                                     
            elseif unit.valid == false then
                storage.lightning_units[surface_name][key] = nil
            end
            i = i + 1
            if i == 20 then
                break
            end
        end

        local surface_group
        for _, unit in pairs(unit_group) do
            if unit.valid then
                if surface_group == nil then
                    surface_group = unit.surface.create_unit_group({position = unit.position, force = unit.force})
                end

                surface_group.add_member(unit)
            end
        end

        if surface_group then
            if CustomAttacks.can_spawn(10) then
                remote.call("enemyracemanager", "build_base_formation", surface_group)
            end
        end
    end

    --- forcefully remove units after 4 mins.
    i = 0
    for key, unit_data in pairs(storage.backlog_lightning_units) do
        local entity = unit_data.entity
        if entity.valid and game.tick > (unit_data.tick + 4 * minute)  then
            --- Protoss trainee dies after 4 minutes.  Half day on Aiur.
            entity.destroy()
            storage.backlog_lightning_units[key] = nil
        elseif entity.valid == false then
            storage.backlog_lightning_units[key] = nil
        end
        i = i + 1
        if i == 30 then
            break
        end
    end
end

return CustomAttacks