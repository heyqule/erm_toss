---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 2/22/2025 5:43 PM
---

if not mods['space-age'] then
    return
end

local Crystal = require('__erm_toss_economy__/prototypes/create-crystal')
local ProtossPlayableEntities = require('__erm_toss_economy__/prototypes/create-protoss-entities')
local ProtossPlayableRecipe = require('__erm_toss_economy__/prototypes/create-protoss-recipes')

local ERM_UnitHelper = require("__enemyracemanager__/lib/rig/unit_helper")

local crystal_color = {r=0.53,g=0.5,b=0.72,a=1}
local crystal_name = MOD_NAME..'--crystal'
--- Create recipe category and subgroup
Crystal.init()
--- Create crystal item
Crystal.create_item(crystal_name, CRYSTAL_TRIGGER)

--- Create crystal duplication recipe
Crystal.create_crystal_duplication_recipe(crystal_name, {
    {type = "item", name = "lithium-plate", amount = 1},
    {type = "item", name = "holmium-plate", amount = 1},
    {type = "fluid", name = "electrolyte", amount = 2},
},crystal_color)

Crystal.create_crystal_fresh_duplication_recipe(crystal_name, {
    {type = "item", name = "lithium-plate", amount = 1},
    {type = "item", name = "holmium-plate", amount = 1},
    {type = "fluid", name = "electrolyte", amount = 2},
},crystal_color)

--- Create crystal to biter egg recipe
Crystal.create_crystal_to_biter_egg_recipe(crystal_name, {
    {type = "item", name = "bioflux", amount = 10},
    {type = "item", name = "nutrients", amount = 50},
    {type = "fluid", name = "water", amount = 200},
},
crystal_color)

Crystal.create_crystal_to_military_recipe(crystal_name, crystal_color)
Crystal.create_crystal_to_uranium238_recipe(crystal_name)
Crystal.create_crystal_to_promethium_recipe(crystal_name)
Crystal.create_tech(crystal_name)

--- Create playable entities for zerg
ProtossPlayableEntities.init(MOD_NAME)
--- ProtossPlayableEntities.zealot(prefix, hp_multiplier = 1, damage_multiplier = 1)
ProtossPlayableEntities.zealot(MOD_NAME)
ProtossPlayableEntities.dragoon(MOD_NAME)
ProtossPlayableEntities.arbiter(MOD_NAME)
ProtossPlayableEntities.corsair(MOD_NAME)
ProtossPlayableEntities.darktemplar(MOD_NAME)
ProtossPlayableEntities.archon(MOD_NAME)

ProtossPlayableEntities.nexus(MOD_NAME)

--- Create recipe and item for zerg
ProtossPlayableRecipe.zealot(MOD_NAME, {
    {type = "item", name = "holmium-plate", amount = 5},
    {type = "item", name = crystal_name, amount = 2},
    {type = "item", name = "quantum-processor", amount = 1},
    {type = "item", name = "superconductor", amount = 1},
    {type = "item", name = "supercapacitor", amount = 1},
})
ProtossPlayableRecipe.dragoon(MOD_NAME,{
    {type = "item", name = "holmium-plate", amount = 10},
    {type = "item", name = crystal_name, amount = 4},
    {type = "item", name = "quantum-processor", amount = 1},
    {type = "item", name = "superconductor", amount = 1},
    {type = "item", name = "supercapacitor", amount = 1},
})
ProtossPlayableRecipe.arbiter(MOD_NAME,{
    {type = "item", name = "holmium-plate", amount = 25},
    {type = "item", name = crystal_name, amount = 16},
    {type = "item", name = "quantum-processor", amount = 1},
    {type = "item", name = "superconductor", amount = 1},
    {type = "item", name = "supercapacitor", amount = 1},
})
ProtossPlayableRecipe.corsair(MOD_NAME,{
    {type = "item", name = "holmium-plate", amount = 20},
    {type = "item", name = crystal_name, amount = 4},
    {type = "item", name = "quantum-processor", amount = 1},
    {type = "item", name = "superconductor", amount = 1},
    {type = "item", name = "supercapacitor", amount = 1},
})
ProtossPlayableRecipe.darktemplar(MOD_NAME,{
    {type = "item", name = "holmium-plate", amount = 20},
    {type = "item", name = crystal_name, amount = 8},
    {type = "item", name = "quantum-processor", amount = 1},
    {type = "item", name = "superconductor", amount = 1},
    {type = "item", name = "supercapacitor", amount = 1},
})
ProtossPlayableRecipe.archon(MOD_NAME,{
    {type = "item", name = "holmium-plate", amount = 50},
    {type = "item", name = crystal_name, amount = 32},
    {type = "item", name = "quantum-processor", amount = 2},
    {type = "item", name = "superconductor", amount = 2},
    {type = "item", name = "supercapacitor", amount = 2},
})

ProtossPlayableRecipe.nexus(MOD_NAME,{
    {type = "item", name = "quantum-processor", amount = 10},
    {type = "item", name = "superconductor", amount = 10},
    {type = "item", name = "supercapacitor", amount = 10},
    {type = "item", name = "holmium-plate", amount = 200},
    {type = "item", name = crystal_name, amount = 50},
})

--- Create technology for zerg
ProtossPlayableRecipe.technologies(MOD_NAME)


--- Assign larva egg to applicable spawners as loot
local lootable_spawners = {
    'nexus', 'pylon'
}

local loot_multiplier = {
    [2] = {1,1},
    [3] = {2,4},
    [4] = {3,6},
    [5] = {4,8},
}

for _, spawner in pairs(lootable_spawners) do
    for tier, multiplier in pairs(loot_multiplier) do
        local unit_prototype = data.raw['unit-spawner'][MOD_NAME..'--'..spawner..'--'..tier]
        if unit_prototype then
            unit_prototype.loot = {
                {item = crystal_name, count_min = multiplier[1], count_max = multiplier[2] }
            }
        end
    end
end

--- The following spanwers have 33% to drop loots
local lootable_spawner_with_probablity = {
    'gateway', 'stargate', 'robotics_facility', 'arbiter_tribunal', 'templar_archive'
}

local loot_multiplier_with_probablity = {
    [2] = {1,1},
    [3] = {1,3},
    [4] = {3,5},
    [5] = {4,8},
}

for _, spawner in pairs(lootable_spawner_with_probablity) do
    for tier, multiplier in pairs(loot_multiplier_with_probablity) do
        local unit_prototype = data.raw['unit-spawner'][MOD_NAME..'--'..spawner..'--'..tier]
        if unit_prototype then
            unit_prototype.loot = {
                {item = crystal_name, probability = 0.33, count_min = multiplier[1], count_max = multiplier[2] }
            }
        end
    end
end
