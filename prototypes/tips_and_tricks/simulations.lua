---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 11/2/2024 7:01 PM
---
---
local simulations = {}

simulations.general = {
    init = [[
require("__core__/lualib/story")
local sim = game.simulation
sim.camera_position = {0, 0}
sim.camera_zoom = 0.85
sim.hide_cursor = true
player = sim.create_test_player{name = "you"}
sim.camera_player = player
game.planets["fulgora"].create_surface()
local surface = game.surfaces["fulgora"]
surface.request_to_generate_chunks({0,0}, 2)
surface.force_generate_chunk_requests()


local tank
local story_table =
{
    {
        {
            name = "start",
            init = function()
                local entities = surface.find_entities {{-100, -100}, {100, 100}}
                for _, ent in pairs(entities) do
                    ent.destroy()
                end
                player.teleport({-3,10},surface)
                tank = surface.create_entity { name="tank", position={0, 10}, force="player" }
                surface.create_entity { name="enemy_erm_toss--zealot--5", position={8, -2} }
                surface.create_entity { name="enemy_erm_toss--zealot--5", position={8, 2} }
                surface.create_entity { name="enemy_erm_toss--dragoon--5", position={8, 0} }
                surface.create_entity { name="enemy_erm_toss--scout--5", position={8, 4} }
            end
        },
        {
            condition = story_elapsed_check(3),
            action = function()
                tank.die()
            end
        },
        {
            condition = story_elapsed_check(3),
            action = function()
                story_jump_to(storage.story, "start")
            end
        }
    }
}
tip_story_init(story_table)
    ]],
}

simulations.teleportation = {
    init_update_count = 60,
    init = [[
require("__core__/lualib/story")

game.planets["fulgora"].create_surface()
local fulgora_surface = game.surfaces["fulgora"]
fulgora_surface.request_to_generate_chunks({0,0}, 2)
fulgora_surface.force_generate_chunk_requests()

local sim = game.simulation
player = sim.create_test_player{name = "you"}
sim.camera_player = player
sim.camera_position = {0, 0}
sim.camera_zoom = 0.75
sim.hide_cursor = true


local story_table =
{
    {
        {
            name = "start",
            init = function()
                local entities = fulgora_surface.find_entities_filtered {type={"unit"}}
                for _, ent in pairs(entities) do
                    ent.destroy()
                end
                player.teleport({0,0}, "fulgora")
            end,
        },
        {
            condition = story_elapsed_check(2),
            action = function()
                fulgora_surface.execute_lightning{name = "enemy_erm_toss--aiur-lightning", position = {4, 4}}
            end
        },
        {
            condition = story_elapsed_check(0.25),
            action = function()
                fulgora_surface.create_entity { name="enemy_erm_toss--recall-80-small", position={-2, 0}}
            end
        },
        {
            condition = story_elapsed_check(0.25),
            action = function()
                fulgora_surface.create_entity { name="enemy_erm_toss--zealot--5", position={-2, 0} }
            end
        },
        {
            condition = story_elapsed_check(3),
            action = function()
                story_jump_to(storage.story, "start")
            end
        }
    }
}
tip_story_init(story_table)
]]
}

simulations.planet_aiur = {
    init = [[
require("__core__/lualib/story")

game.planets["aiur"].create_surface()
local aiur_surface = game.surfaces["aiur"]
aiur_surface.request_to_generate_chunks({0,0}, 2)
aiur_surface.force_generate_chunk_requests()

local sim = game.simulation
player = sim.create_test_player{name = "you"}
sim.camera_player = player
sim.camera_position = {0, 0}
sim.camera_zoom = 0.5
sim.hide_cursor = true

local story_table =
{
    {
        {
            name = "start",
            init = function()
                local entities = aiur_surface.find_entities_filtered {type={"unit","segmented-unit"}}
                for _, ent in pairs(entities) do
                    ent.destroy()
                end

                aiur_surface.create_entity { name="cargo-landing-pad", position={-25, -10}, force="player" }
                player.teleport({-22,0}, "aiur")
                for _, y in pairs({-5,0,5}) do
                    for _, x in pairs({-20, -17}) do
                        local gun = aiur_surface.create_entity { name="gun-turret", position={x, y}, force="player" }
                        local inventory = gun.get_inventory(defines.inventory.turret_ammo)
                        inventory.insert({name = "piercing-rounds-magazine", count = 100})
                    end
                end

                for i = -10, 10, 1 do
                    aiur_surface.create_entity { name="stone-wall", position={-15, i}, force="player" }
                end

                aiur_surface.create_entity { name="enemy_erm_toss--nexus--5", position={12, -5} }
                aiur_surface.create_entity { name="enemy_erm_toss--gateway--5", position={12, 5} }
                aiur_surface.create_entity { name="enemy_erm_toss--pylon--5", position={16, 0} }
            end,
        },
        {
            condition = story_elapsed_check(2),
            action = function()
                aiur_surface.create_entity { name="enemy_erm_toss--zealot--5", position={8, 2} }
                aiur_surface.create_entity { name="enemy_erm_toss--dragoon--5", position={8, 0} }
                aiur_surface.create_entity { name="enemy_erm_toss--scout--5", position={8, 4} }
            end
        },
        {
            condition = story_elapsed_check(2),
            action = function()
                aiur_surface.create_entity { name="enemy_erm_toss--archon--5", position={8, 2} }
                aiur_surface.create_entity { name="enemy_erm_toss--carrier--5", position={8, 0} }
                aiur_surface.create_entity { name="enemy_erm_toss--darktemplar--5", position={8, 4} }
            end
        },
        {
            condition = story_elapsed_check(10),
            action = function()
                story_jump_to(storage.story, "start")
            end
        }
    }
}
tip_story_init(story_table)
]]
}

simulations.invis_darktemplar = {
    init = [[
require("__core__/lualib/story")

local sim = game.simulation
player = sim.create_test_player{name = "you"}
sim.camera_player = player
sim.camera_position = {0, 0}
sim.camera_zoom = 0.5
sim.hide_cursor = true

game.planets["aiur"].create_surface()
local surface = game.surfaces["aiur"]
surface.request_to_generate_chunks({0,0}, 2)
surface.force_generate_chunk_requests()


local tank
local story_table =
{
    {
        {
            name = "start",
            init = function()
                surface.create_entity { name="cargo-landing-pad", position={-25, -10}, force="player" }
                player.teleport({-22,0},'aiur')
                for _, y in pairs({-5,5}) do
                    for _, x in pairs({-20, -17}) do
                        local gun = surface.create_entity { name="gun-turret", position={x, y}, force="player" }
                        local inventory = gun.get_inventory(defines.inventory.turret_ammo)
                        inventory.insert({name = "piercing-rounds-magazine", count = 100})
                    end
                end

                for i = -10, 10, 1 do
                    surface.create_entity { name="stone-wall", position={-20, i}, force="player" }
                end

            end,
        },
        {
            condition = story_elapsed_check(1),
            action = function()
                surface.create_entity { name="enemy_erm_toss--invis_darktemplar--5", position={8, 2}, force="enemy" }
                surface.create_entity { name="enemy_erm_toss--invis_darktemplar--5", position={8, 0}, force="enemy" }
                surface.create_entity { name="enemy_erm_toss--invis_darktemplar--5", position={8, 4}, force="enemy" }
            end
        },
        {
            condition = story_elapsed_check(10),
            action = function()
                story_jump_to(storage.story, "start")
            end
        }
    }
}
tip_story_init(story_table)
    ]],
}

return simulations